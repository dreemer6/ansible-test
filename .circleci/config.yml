# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@3.1.4

commands:
  destroy_environment:
    steps: 
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region ${AWS_DEFAULT_REGION}
        - run: return 1
        - destroy_environment
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # fail the job intentionally to simulate error
          command: |
            return 1
  
  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.9.16-alpine3.17
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["b9:ac:c9:21:f6:1d:f5:69:87:e4:e0:88:69:9d:e4:d2"] 
      - run:
          name: Install Ansible
          command: |
            # Install Ansible
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            # Your command
            ansible-playbook -i inventory main-remote.yml
  smoke_test2:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
            fi

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  myWorkflow:
    jobs:
    
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure

